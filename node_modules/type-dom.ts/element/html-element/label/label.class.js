import { TextNode } from '../../../text-node/text-node.class';
import { TypeLabel } from '../../../type-element/type-html/label/label.abstract';
export class Label extends TypeLabel {
    parent;
    className;
    childNodes;
    constructor(parent) {
        super();
        this.parent = parent;
        this.className = 'Label';
        this.propObj.attrObj = {
            name: 'label'
        };
        this.childNodes = [];
    }
    createInstance(labelLiteral) {
        this.setPropObj(labelLiteral.propObj);
        for (const idx in labelLiteral.childNodes) {
            if (this.childNodes[idx]) {
                this.childNodes[0].setText(labelLiteral.childNodes[0].nodeValue);
            }
            else {
                const child = new TextNode(this, labelLiteral.childNodes[0].nodeValue);
                this.appendChild(child);
            }
        }
    }
}

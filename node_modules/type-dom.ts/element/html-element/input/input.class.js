import { TypeHtml } from '../../../type-element/type-html/type-html.abstract';
export class Input extends TypeHtml {
    parent;
    nodeName;
    dom;
    className;
    childNodes;
    constructor(parent) {
        super('input');
        this.parent = parent;
        this.nodeName = 'input';
        this.dom = document.createElement(this.nodeName);
        this.className = 'Input';
        this.childNodes = [];
    }
    get type() {
        return this.attrObj.type;
    }
    get value() {
        return this.dom.value;
    }
    setValue(value) {
        if (this.type === 'date') {
            console.log('isNaN(Number(value)) is ', isNaN(Number(value)));
            if (isNaN(Number(value))) {
            }
            else {
                if (String(value).length === 13) {
                    const d = new Date(value);
                    value = (d.getFullYear()) + '-' +
                        (d.getMonth() + 1) + '-' +
                        (d.getDate());
                    console.log('value is ', value);
                }
                else {
                    console.error('时间戳长度有问题，不是13位');
                    throw Error('时间戳长度有问题，不是13位');
                }
            }
        }
        this.setAttribute('value', value);
        this.dom.value = String(value);
    }
}

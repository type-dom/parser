import { TypeNode } from '../type-node/type-node.abstract';
import { TypeElement } from '../type-element/type-element.abstract';
import { ITextNode } from './text-node.interface';
export declare class TextNode extends TypeNode implements ITextNode {
    parent: TypeElement;
    className: 'TextNode';
    nodeName: '#text';
    nodeValue: string;
    dom: Text;
    constructor(parent: TypeElement, text?: string);
    get index(): number;
    get length(): number;
    setConfig(config: {
        title: string;
    }): void;
    setParent(parent: TypeElement): void;
    setText(text: string): void;
    appendText(content: string): void;
    sliceText(startOffset: number, endOffset?: number): string;
    insertText(text: string, startOffset: number, endOffset?: number): void;
    deleteText(startOffset: number, endOffset?: number): void;
    createItem(parent: TypeElement, node: ITextNode): TextNode;
    render(): void;
}
